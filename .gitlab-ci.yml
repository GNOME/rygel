include:
  - remote: "https://gitlab.gnome.org/Infrastructure/freedesktop-ci-templates/-/raw/e195d80f35b45cc73668be3767b923fd76c70ed5/templates/ci-fairy.yml"
  - remote: 'https://gitlab.gnome.org/Infrastructure/freedesktop-ci-templates/-/raw/e195d80f35b45cc73668be3767b923fd76c70ed5/templates/fedora.yml'
  - project: 'gnome/citemplates'
    file: 'flatpak/flatpak_ci_initiative.yml'
  - component: 'gitlab.gnome.org/GNOME/citemplates/release-service@master'
    inputs:
      dist-job-name: 'flatpak'
      tarball-artifact-path: "${TARBALL_ARTIFACT_PATH}"


variables:
    FLATPAK_MODULE: "rygel"
    BUNDLE: "org.gnome.Rygel.Devel.flatpak"
    TARBALL_ARTIFACT_PATH: ".flatpak-builder/build/${FLATPAK_MODULE}/_flatpak_build/meson-dist/${CI_COMMIT_TAG}.tar.xz"
    GIT_SUBMODULE_STRATEGY: recursive
    MESON_TEST_TIMEOUT_MULTIPLIER: 3
    FEDORA_BASE_TAG: "2025-03-22.0"

flatpak:
    extends: ['.flatpak']
    variables:
        MANIFEST_PATH: "build-aux/org.gnome.Rygel.json"
        RUNTIME_REPO: "https://flathub.org/repo/flathub.flatpakrepo"
        # Replace with your application name, as written in the manifest
        APP_ID: "org.gnome.Rygel"

stages:
    - review
    - prepare
    - build
    - test
    - analysis
    - deploy

.check-template: &check
  extends:
    - .fdo.ci-fairy
  artifacts:
    expire_in: 1 week
    paths:
      - check-junit-report.xml
    reports:
      junit: check-junit-report.xml

check-commit-log:
  variables:
    GIT_DEPTH: "100"
  stage: review
  script:
    - if [[ x"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "x" ]] ;
      then
        ci-fairy check-commits --junit-xml=check-junit-report.xml ;
      else
        echo "Not a merge request" ;
      fi
  <<: *check

check-merge-request:
  variables:
    GIT_STRATEGY: none
  stage: review
  script:
    - if [[ x"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "x" ]] ;
      then
        ci-fairy check-merge-request --require-allow-collaboration --junit-xml=check-junit-report.xml ;
      else
        echo "Not a merge request" ;
      fi
  <<: *check

.build-template: &build
  stage: build
  script:
      - meson . build --prefix=/usr -Db_coverage=true
      - ninja -C build
  artifacts:
      expire_in: 1 day
      paths:
          - build

.test-template: &test
  stage: test
  variables:
    G_SLICE: "always-malloc"
    MALLOC_CHECK_: "3"
  script:
    - cd build
    - |
      # Remove the many "CI_" variables from the environment. Meson dumps the
      # whole environment for every failed test, and that gives a whole
      # screenful of junk each time unless we strip these.
      unset $(env|grep -o '^CI_[^=]*')
      env LANG=C.UTF-8 LC_ALL=C.UTF-8 meson test --timeout-multiplier ${MESON_TEST_TIMEOUT_MULTIPLIER} --print-errorlogs ${MESON_TEST_EXTRA_ARGS}
  after_script:
    - |
      echo "Distribution: "
      echo
      egrep '^NAME=|^VERSION=' /etc/os-release
      echo
      echo "Test suite settings:"
      echo
      echo "G_MESSAGES_DEBUG: ${G_MESSAGES_DEBUG}"
      echo "MESON_TEST_EXTRA_ARGS: ${MESON_TEST_EXTRA_ARGS}"
      echo
      echo "These values can be set at https://gitlab.gnome.org/GNOME/rygel/pipelines/new"
  artifacts:
    expire_in: 1 day
    when: always
    paths:
    - build
    reports:
      junit: "build/meson-logs/testlog.junit.xml"

.rygel.fedora@common:
  variables:
      BASE_TAG: '${FEDORA_BASE_TAG}'
      FDO_UPSTREAM_REPO: GNOME/rygel
      FDO_DISTRIBUTION_PACKAGES: "clang clang-analyzer gcovr git libasan libubsan python3-gobject python3-pip xmlto gobject-introspection-devel gtk-doc libsoup3-devel libuuid-devel libxml2-devel vala ninja-build python3-setuptools gtk3-devel pandoc python3-sphinx sqlite-devel gstreamer1-devel tracker-devel libunistring-devel valadoc gst-editing-services-devel gupnp-devel gupnp-av-devel gupnp-dlna-devel libmediaart-devel libgee-devel tinysparql-devel gtk4-devel gstreamer1-plugin-gtk4"
      FDO_DISTRIBUTION_EXEC: .gitlab-ci/setup-image-fedora.sh

.rygel.fedora:42@x86_64:
    extends: .rygel.fedora@common
    variables:
      FDO_DISTRIBUTION_VERSION: "42"
      FDO_DISTRIBUTION_TAG: "x86_64-${BASE_TAG}"

build-container-fedora:42@x86_64:
    extends:
        - .fdo.container-build@fedora
        - .rygel.fedora:42@x86_64
    stage: prepare
    variables:
        GIT_STRATEGY: none

build-fedora:42@x86_64:
    extends:
        - .fdo.distribution-image@fedora
        - .rygel.fedora:42@x86_64
    needs:
        - build-container-fedora:42@x86_64
    <<: *build

test-fedora:42@x86_64:
    tags:
        - ipv6
    extends:
        - .fdo.distribution-image@fedora
        - .rygel.fedora:42@x86_64
    needs:
        - build-fedora:42@x86_64
    <<: *test


#coverage-analysis:
#  extends:
#    - .fdo.distribution-image@fedora
#    - .rygel.fedora:42@x86_64
#  stage: analysis
#  allow_failure: true
#  script:
#    - cd build
#    - mkdir -p coveragereport
#    - gcovr --html-details --print-summary --root=.. --exclude=../docs/reference --exclude=../tests --exclude=../tools --exclude=../examples --output coveragereport/index.html
#  coverage: '/^lines: (\d+\.\d+\%)/'
#  artifacts:
#    when: always
#    paths:
#    - build/coveragereport
#  needs:
#    - test-fedora:42@x86_64

#static-scan:
#  extends:
#    - .fdo.distribution-image@fedora
#    - .rygel.fedora:42@x86_64
#  stage: analysis
#  needs:
#    - build-container-fedora:42@x86_64
#  script:
#    - meson --buildtype=debug _scan_build
#    - export SCANBUILD="$PWD/.gitlab-ci/scanbuild-wrapper.sh"
#    - ninja -C _scan_build scan-build
#  artifacts:
#    paths:
#      - _scan_build/meson-logs
#  after_script:
#    - .gitlab-ci/scanbuild-plist-to-junit.py _scan_build/meson-logs/scanbuild/ > _scan_build/junit-scan-build.xml
#  artifacts:
#    reports:
#      junit: "_scan_build/junit-scan-build.xml"

#coverity:
#  extends:
#    - .fdo.distribution-image@fedora
#    - .rygel.fedora:42@x86_64
#  stage: analysis
#  allow_failure: true
#  script:
#    - curl https://scan.coverity.com/download/linux64 --data "token=$COVERITY_TOKEN&project=rygel" --output /tmp/coverity_tool.tgz
#    - tar zxf /tmp/coverity_tool.tgz
#    - mkdir coverity-build
#    - cd coverity-build
#    - env CC=clang meson ..
#    - ../cov-analysis-linux64-*/bin/cov-build --dir cov-int ninja
#    - tar czf cov-int.tar.gz cov-int
#    - curl https://scan.coverity.com/builds?project=rygel
#      --form token=$COVERITY_TOKEN --form email=mail@jensge.org
#      --form file=@cov-int.tar.gz --form version="`git describe --tags`"
#      --form description="gitlab CI build"
#  needs:
#    - build-container-fedora:42@x86_64
#  only:
#    - master
#  except:
#    changes:
#      - po/*.po

pages:
  extends:
    - .fdo.distribution-image@fedora
    - .rygel.fedora:42@x86_64
  stage: deploy
  script:
      - meson setup doc-build -Dapi-docs=true -Dplugins=[] -Dexamples=false -Dtests=false
      - ninja -C doc-build
      - ninja -C doc-build doc/web/docs
      - mkdir -p public
      - .gitlab-ci/collect-reference-docs.sh doc-build
      - cp -a doc-build/doc/web/docs/* public

  artifacts:
    paths:
      - public
  needs:
    - build-container-fedora:42@x86_64
  only:
    - master
    - /^wip\/.*\/ci.*$/
    - /^wip\/.*\/.*doc.*$/

